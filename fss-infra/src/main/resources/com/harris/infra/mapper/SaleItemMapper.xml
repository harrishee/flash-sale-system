<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.harris.infra.mapper.SaleItemMapper">
    <!-- 定义SQL片段，列出所有字段，便于复用 -->
    <sql id="ALL_COLUMNS">
        id,
        item_title,
        item_sub_title,
        item_desc,
        initial_stock,
        available_stock,
        stock_warm_up,
        original_price,
        sale_price,
        start_time,
        end_time,
        rules,
        status,
        activity_id,
        modified_time,
        create_time
    </sql>

    <!-- 根据商品ID查询单个商品的详细信息，返回的结果映射为SaleItemDO对象 -->
    <select id="getItemById" resultType="com.harris.infra.model.SaleItemDO" parameterType="java.lang.Long">
        SELECT *
        FROM sale_item
        WHERE id = #{itemId}
    </select>

    <!-- 条件查询商品列表，支持通过关键字、活动ID、状态、库存预热值进行筛选，并支持分页查询 -->
    <select id="getItemsByCondition" resultType="com.harris.infra.model.SaleItemDO">
        SELECT * FROM sale_item WHERE 1=1
        <if test="keyword != null">
            AND item_title LIKE concat("%",concat(#{keyword},"%"))
        </if>
        <if test="activityId != null">
            AND activity_id = #{activityId}
        </if>
        <if test="status != null">
            AND status = #{status}
        </if>
        <if test="stockWarmUp != null">
            AND stock_warm_up = #{stockWarmUp}
        </if>
        ORDER BY id DESC
        LIMIT #{offset},#{pageSize}
    </select>

    <!-- 根据相同的查询条件，计算满足条件的商品总数，用于分页显示 -->
    <select id="countItemsByCondition" resultType="java.lang.Integer">
        SELECT count(*) FROM sale_item WHERE 1=1
        <if test="keyword != null">
            AND item_title LIKE concat("%",concat(#{keyword},"%"))
        </if>
        <if test="activityId != null">
            AND activity_id = #{activityId}
        </if>
        <if test="status != null">
            AND status = #{status}
        </if>
        <if test="stockWarmUp != null">
            AND stock_warm_up = #{stockWarmUp}
        </if>
    </select>

    <!-- 插入新的商品记录到sale_item表，并通过<selectKey>标签获取自增ID -->
    <insert id="insertItem" parameterType="com.harris.infra.model.SaleItemDO" useGeneratedKeys="true"
            keyProperty="saleItemDO.id">
        INSERT INTO sale_item (
        <include refid="ALL_COLUMNS"/>
        ) VALUES (
        null,
        #{itemTitle,jdbcType=VARCHAR},
        #{itemSubTitle,jdbcType=VARCHAR},
        #{itemDesc,jdbcType=LONGVARCHAR},
        #{initialStock,jdbcType=INTEGER},
        #{availableStock,jdbcType=INTEGER},
        #{stockWarmUp,jdbcType=INTEGER},
        #{originalPrice,jdbcType=BIGINT},
        #{salePrice,jdbcType=BIGINT},
        #{startTime,jdbcType=TIMESTAMP},
        #{endTime,jdbcType=TIMESTAMP},
        #{rules,jdbcType=LONGVARCHAR},
        #{status,jdbcType=INTEGER},
        #{activityId,jdbcType=BIGINT},
        now(),
        now()
        )
        <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
            SELECT LAST_INSERT_ID();
        </selectKey>
    </insert>

    <!-- 根据商品ID更新商品信息。支持更新标题、描述、库存、价格等字段 -->
    <update id="updateItem" parameterType="com.harris.infra.model.SaleItemDO">
        UPDATE sale_item SET modified_time = now()
        <if test="itemTitle != null">
            ,`item_title` = #{itemTitle,jdbcType=VARCHAR}
        </if>
        <if test="itemSubTitle != null">
            ,`item_sub_title` = #{itemSubTitle,jdbcType=VARCHAR}
        </if>
        <if test="initialStock != null">
            ,`initial_stock` = #{initialStock,jdbcType=INTEGER}
        </if>
        <if test="availableStock != null">
            ,`available_stock` = #{availableStock,jdbcType=INTEGER}
        </if>
        <if test="stockWarmUp != null">
            ,`stock_warm_up` = #{stockWarmUp,jdbcType=INTEGER}
        </if>
        <if test="originalPrice != null">
            ,`original_price` = #{originalPrice,jdbcType=BIGINT}
        </if>
        <if test="salePrice != null">
            ,`sale_price` = #{salePrice,jdbcType=BIGINT}
        </if>
        <if test="startTime != null">
            ,`start_time` = #{startTime,jdbcType=TIMESTAMP}
        </if>
        <if test="endTime != null">
            ,`end_time` = #{endTime,jdbcType=TIMESTAMP}
        </if>
        <if test="status != null">
            ,`status` = #{status,jdbcType=INTEGER}
        </if>
        <if test="activityId != null">
            ,`activity_id` = #{activityId,jdbcType=BIGINT}
        </if>
        <if test="itemDesc != null">
            ,`item_desc` = #{itemDesc,jdbcType=LONGVARCHAR}
        </if>
        <if test="rules != null">
            ,`rules` = #{rules,jdbcType=LONGVARCHAR}
        </if>
        WHERE id = #{id}
    </update>

    <!-- 根据商品ID和扣减数量来减少商品的可用库存 -->
    <update id="reduceStockById" parameterType="com.harris.infra.model.SaleItemDO">
        UPDATE sale_item
        SET modified_time   = now(),
            available_stock = available_stock - #{quantity}
        WHERE id = #{itemId}
          AND available_stock <![CDATA[ >= ]]>  #{quantity}
    </update>

    <!-- 根据商品ID和增加数量来增加商品的可用库存，确保增加后的库存不超过初始库存 -->
    <update id="addStockById" parameterType="com.harris.infra.model.SaleItemDO">
        UPDATE sale_item
        SET modified_time   = now(),
            available_stock = available_stock + #{quantity}
        WHERE id = #{itemId}
          AND (available_stock + #{quantity}) <![CDATA[ <= ]]> initial_stock
    </update>
</mapper>
